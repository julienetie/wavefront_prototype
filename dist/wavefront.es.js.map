{"version":3,"file":"wavefront.es.js","sources":["../src/helpers.js","../src/assembly.js","../src/tags.js","../src/logic.js","../src/index.js"],"sourcesContent":["export const isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\nexport const isString = value => typeof value === 'string';\nexport const isPrimitive = value => isString(value) || typeof value === 'number';\nexport const isFunction = value => typeof value === 'function';\nexport const isElement = value => value instanceof Element;\nexport const isVNode = value  => value.hasOwnProperty('t') && value.hasOwnProperty('id');\nexport const removeChildren = parentNode => {\n  while (parentNode.firstChild) {\n    parentNode.removeChild(parentNode.firstChild);\n  }\n}","import { div } from './tags';\n\nimport {\n    isPlaneObject,\n    isString,\n    isPrimitive,\n    isFunction,\n    isElement,\n    isVNode,\n    removeChildren\n} from './helpers';\n\n\nlet vDOM;\nlet rootElement;\nconst fragment = document.createDocumentFragment();\n\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n/** \n * @param {string} t - Text \n * @param {Number} id - Identity (Not an attribute)\n * @param {Number} ix - Index \n * @param {Object|string} at - Attributes | Primative\n * @param {Array} ch - Children \n */\nconst node = (t, id, at, ch, isSVG) => {\n    switch (t) {\n        case 'primitive':\n            return { t: 'TEXT', id, val: at };\n        case 'comment':\n            return { t: 'COM', id, val: at };\n        default:\n            return isSVG ? {\n                t,\n                id,\n                at,\n                chx: ch.length,\n                ch,\n                svg: true\n            } : {\n                t,\n                id,\n                at,\n                chx: ch.length,\n                ch\n            };\n    }\n}\n\nlet count = 0;\n\n/** \n Assembly is the mechanics of the tag functions. \n A Wavefront template is a set of nested functions\n which act similar to recursion. \n\n The deepest nested tag of the youngest index is\n the first executed tag function.\n\n\n**/\nexport const assembly = (tagName, isSVG) => {\n\n    return function inner(...args) {\n        const tagNameStr = `${tagName}`;\n        let attributes;\n        let item;\n        let childNodes = [];\n        let i;\n        for (i = 0; i < args.length; i++) {\n            item = args[i] || {};\n            let isItemObject = isPlaneObject(item);\n            let isItemVnode = item.hasOwnProperty('t');\n\n            // Check if item is a plane object = attribute.\n            if (isItemObject && !isItemVnode) {\n                // let isSelector = false;\n                attributes = item;\n                continue;\n            }\n\n\n            // Check if item is an array = group of child elements.\n            if (Array.isArray(item)) {\n                childNodes = [...childNodes, ...item];\n                continue;\n            }\n\n            // check if item is not an object, array or function = child element.\n            if (isItemObject && isItemVnode || isPrimitive) {\n                childNodes.push(item);\n                continue;\n            }\n        }\n\n\n\n        for (i = 0; i < childNodes.length; ++i) {\n            const childNode = childNodes[i];\n            if (isPrimitive(childNode)) {\n                let type;\n                let value;\n                if (childNode[0] === '@') {\n                    type = 'comment';\n                    value = childNode.slice(1)\n                } else {\n                    type = 'primitive';\n                    value = childNode;\n                }\n                count++;\n                childNodes[i] = node(type, count, value, null, isSVG);\n            }\n        }\n\n        count++;\n        // Update child nodes with parentId\n        for (i = 0; i < childNodes.length; ++i) {\n            childNodes[i].pid = count;\n            childNodes[i].ix = i;\n        }\n\n        return node(tagNameStr, count, attributes, childNodes, isSVG);\n    }\n}\n\nvar removeChilds = function(node) {\n    var last;\n    while (last = node.lastChild) node.removeChild(last);\n};\n\n\nconst render = (initalRootElement, vNode, isPartial) => {\n    // Cache root element \n    if (rootElement === undefined) {\n        rootElement = initalRootElement;\n    }\n    // Creates a new fragment for partials but uses \n    // the fragment cache for the inital render.\n    // const renderFragment = isPartial === true ? (document.createDocumentFragment()) : fragment; \n    // console.log('renderFragment', document.createDocumentFragment())\n    let renderFragment;\n    if (isPartial === true) {\n        renderFragment = document.createDocumentFragment()\n    } else {\n        renderFragment = fragment;\n    }\n\n    const node = isPartial === true ? vNode : vDOM;\n    console.log('node', node)\n    count = 0; // reset counter used for node ids.\n\n\n\n    if (Array.isArray(node)) {\n        const dummyVDOM = div({ id: 'dummy' }, node);\n\n\n        function appendMultipleNodes() {\n            var args = [].slice.call(arguments);\n            for (var x = 1; x < args.length; x++) {\n                args[0].appendChild(args[x])\n            }\n            return args[0]\n        }\n\n        createAndAppendNode(renderFragment, dummyVDOM);\n        // }\n        const dummy = renderFragment.firstElementChild;\n        const innerNodes = dummy.childNodes;\n        const outerNodeList = [];\n        for (let i = 0; i < innerNodes.length; i++) {\n            outerNodeList.push(innerNodes[i]);\n        }\n        renderFragment.removeChild(dummy);\n\n        appendMultipleNodes(renderFragment, ...outerNodeList)\n\n        requestAnimationFrame(() => {\n            rootElement.appendChild(renderFragment)\n\n            /** \n               Static Rendering:\n               This will generate the inital state\n               of the HTML as a string. headers \n               and other content can be generated \n               from the front side or modified on the\n               back end...\n            **/\n            // const staticRender = rootElement.outerHTML;\n            // console.log(staticRender)\n        });\n    } else {\n        // Wrapped element\n        console.log('1', renderFragment, )\n        createAndAppendNode(renderFragment, node);\n        console.log('renderFragmentdd', renderFragment)\n        // console.log('elementCache', elementCache)\n        requestAnimationFrame(() => {\n            // if (isPartial) {\n            //     removeChilds(rootElement)\n            // }\n            if (!isPartial) {\n                console.log()\n                const fragmentClone = document.importNode(renderFragment, true);\n                rootElement.appendChild(fragmentClone)\n            }\n            // console.log('FINAL FRAGMENT', renderFragment)\n            /** \n               Static Rendering:\n               This will generate the inital state\n               of the HTML as a string. headers \n               and other content can be generated \n               from the front side or modified on the\n               back end...\n            **/\n            // const staticRender = rootElement.outerHTML;\n            // console.log(staticRender)\n            return;\n        });\n    }\n\n    return renderFragment;\n}\n\n// const elementCache = {\n//     class: {},\n//     id: {},\n//     nonexistent: []\n// }\nconst elementCache = {}\n\nconst createAndAppendNode = (frag, node) => {\n    const isSVG = node.svg === true;\n    // const shouldCacheElements = selectorsToCache.length > 0;\n    // TEXT_NODE        3\n    if (node.t === 'TEXT') {\n        const textNode = document.createTextNode(node.val);\n        frag.appendChild(textNode);\n        return;\n    }\n    // // COMMENT_NODE     8\n    if (node.t === 'COM') {\n        // console.log('node.val', node.val)\n        const commentNode = document.createComment(node.val);\n        frag.appendChild(commentNode);\n        return;\n    }\n\n    // ELEMENT_NODE     1\n    const element = isSVG ? document.createElementNS(SVG_NAMESPACE, node.t) : document.createElement(node.t);\n\n    // const cacheSelectedElements = (attributeValue, element) => {\n    //     if (selectorsToCache.indexOf('#' + attributeValue) >= 0) {\n    //         elementCache.id[attributeValue] = element;\n    //     }\n\n    //     if (selectorsToCache.indexOf('.' + attributeValue) >= 0) {\n    //         elementCache.class[attributeValue] = element;\n    //     }\n    // }\n\n\n    // Add attributes\n    if (node.at) {\n        const attributes = node.at;\n        const attributeKeys = Object.keys(attributes);\n        const attributesLength = attributeKeys.length;\n\n        for (let i = 0; i < attributesLength; i++) {\n            const attributeKey = attributeKeys[i];\n\n            // Standard dataset syntax.\n            if (attributeKey.indexOf('data-') === 0) {\n                const dataKey = attributeKey.replace('data-', '');\n                element.dataset[dataKey] = attributes[attributeKey];\n                continue;\n            }\n            // Shorthand dataset syntax.\n            if (attributeKey.indexOf('d-') === 0) {\n                const dataKey = attributeKey.replace('d-', '');\n                element.dataset[dataKey] = attributes[attributeKey];\n                continue;\n            }\n            // Props: _\n            if (attributeKey[0] === '_') {\n                const cleanKey = attributeKey.replace('_', '');\n                element[cleanKey] = attributes[attributeKey];\n                continue;\n            }\n\n            const attributeValue = attributes[attributeKey];\n\n            switch (attributeKey) {\n                // case '#':\n                // case 'id':\n                //     if (shouldCacheElements && selectorsToCache.indexOf('#' + attributeValue) >= 0) {\n                //         // console.log('TEST', attributeKey)\n                //         if (!Array.isArray(elementCache['#' + attributeValue])) {\n                //             elementCache['#' + attributeValue] = [];\n                //         }\n                //         // elementCache.id[attributeValue].push(element);\n                //         elementCache['#' + attributeValue].push(element);\n                //     }\n                //     element.setAttribute(attributeKey, attributes[attributeKey]);\n                //     break;\n                case 'e':\n                case 'event':\n                    element.addEventListener(...attributeValue);\n                    break;\n                case '$':\n                case 'style':\n                    Object.assign(element.style, attributeValue);\n                    break;\n                case 'c':\n                case 'class':\n                    // if (shouldCacheElements && selectorsToCache.indexOf('.' + attributeValue) >= 0) {\n\n                    //     if (!Array.isArray(elementCache['.' + attributes.class])) {\n                    //         elementCache['.' + attributes.class] = [];\n                    //     }\n                    //     // elementCache.class[attributes.class].push(element);\n                    //     elementCache['.' + attributes.class].push(element);\n\n                    //     // console.log('class', attributes.class)\n                    // }\n                    element.className = attributes.class;\n                    break;\n                default:\n                    element.setAttribute(attributeKey, attributeValue);\n                    break;\n            }\n        }\n    }\n\n    // Add children\n    frag.appendChild(element);\n\n    if (Array.isArray(node.ch)) {\n        node.ch.forEach(childNode => {\n            createAndAppendNode(element, childNode)\n        });\n    }\n}\n\n\nconst fullTemplate = {\n    \"t\": \"DIV\",\n    \"id\": 90046,\n    \"at\": {\n        \"class\": \"thisClass\",\n        \"id\": \"thisID\",\n        \"style\": {\n            \"display\": \"block\",\n            \"background\": 'red',\n            \"padding\": \"1rem\"\n        }\n    },\n    \"chx\": 1,\n    \"ch\": [{\n            \"t\": \"TEXT\",\n            \"id\": 90045,\n            \"val\": \"THIS IS A FULL TEMPLATE\",\n            \"pid\": 90046,\n            \"ix\": 0\n        },\n        {\n            \"t\": \"DIV\",\n            \"id\": 90046,\n            \"at\": {\n                \"class\": \"thisClass\",\n                \"style\": {\n                    \"display\": \"block\",\n                    \"background\": 'red',\n                    \"padding\": \"1rem\"\n                }\n            },\n            \"chx\": 1,\n            \"ch\": [{\n                \"t\": \"TEXT\",\n                \"id\": 90045,\n                \"val\": \"THIS IS A child text node\",\n                \"pid\": 90046,\n                \"ix\": 0\n            }]\n        }\n    ]\n}\n\nconst searchAndReplace = (selector, newVNode, retrieveAll) => {\n    const exchangeChildren = (queriedParent) => {\n        // convert the node to an element\n        const partialElement = render(undefined, newVNode, true);\n        // Remove children\n        removeChildren(queriedParent);\n        // Adopt the new element \n        queriedParent.appendChild(partialElement)\n    }\n\n\n    if (retrieveAll) {\n        const queriedParents = fragment.querySelectorAll(selector);\n\n        const queriedParentsLength = queriedParents.length;\n\n        for (let i = 0; i < queriedParentsLength; i++) {\n            exchangeChildren(queriedParents[i])\n        }\n    } else {\n        const queriedParent = fragment.querySelector(selector);\n        exchangeChildren(queriedParent)\n    }\n}\n\n\nconst partialRenderInner = (partialNodes, retrieveAll) => {\n    // console.log('elementCache', elementCache)\n    const partialNodesKeys = Object.keys(partialNodes);\n    const partialNodesLength = partialNodesKeys.length;\n    const elementCachekeys = Object.keys(elementCache);\n    let selector;\n    let type;\n\n    for (let i = 0; i < partialNodesLength; i++) {\n        const partialNodeKey = partialNodesKeys[i];\n        const newVNode = partialNodes[partialNodeKey];\n        console.log('partialNodeKey', newVNode, partialNodeKey)\n\n        searchAndReplace(partialNodeKey, newVNode, retrieveAll);\n\n    }\n\n\n    // Append modified fragment.\n    // Remove children\n    removeChildren(rootElement);\n    const fragmentClone = document.importNode(fragment, true);\n    rootElement.appendChild(fragmentClone);\n}\nconst partialRender = (partialNodes) => partialRenderInner(partialNodes, false);\npartialRender.all = (partialNodes) => partialRenderInner(partialNodes, true);\n\n\n\nexport const initialize = (rootSelector, vNode) => {\n    // allow a string or element as a querySelector value.\n    const container = isElement(rootSelector) ? rootSelector : document.querySelector(rootSelector);\n\n    // Shallowly validate vNode.\n    const initalVNode = isVNode(vNode) ? vNode : false;\n\n    if (initalVNode === false) {\n        throw new Error(`vNode ${vDOM} is not valid`);\n    }\n\n    // Cache valid vDOM\n    vDOM = initalVNode;\n\n    // Render the inital virual DOM and cache the selectors.\n    render(container, false);\n\n    // console.log('initialize', container, vNode, selectors)\n    return partialRender;\n}\n\n// const r = initialize('#root', fullTemplate, '#thisID', '.thisClass', '.childClass');\n\n\n// setTimeout(() => {\n// r({\n//     '.thisClass': {\n//         \"t\": \"DIV\",\n//         \"id\": 90046,\n//         \"at\": {\n//             \"class\": \"new-shit\",\n//             \"style\": {\n//                 \"display\": \"block\",\n//                 \"background\": 'yellow',\n//                 \"padding\": \"1rem\"\n//             }\n//         },\n//         \"chx\": 1,\n//         \"ch\": [{\n//             \"t\": \"TEXT\",\n//             \"id\": 90045,\n//             \"val\": \"NEW SHIT NEW SHIT\",\n//             \"pid\": 90046,\n//             \"ix\": 0\n//         }]\n//     }\n// });\n// }, 2000)","import { assembly } from './assembly';\n\n// HTML Elements.\nexport const a = assembly('a');\nexport const abbr = assembly('abbr');\nexport const address = assembly('address');\nexport const area = assembly('area');\nexport const article = assembly('article');\nexport const aside = assembly('aside');\nexport const audio = assembly('audio');\nexport const childNodes = assembly('childNodes');\nexport const base = assembly('base');\nexport const bdi = assembly('bdi');\nexport const bdo = assembly('bdo');\nexport const blockquote = assembly('blockquote');\nexport const body = assembly('body');\nexport const br = assembly('br');\nexport const button = assembly('button');\nexport const canvas = assembly('canvas');\nexport const caption = assembly('caption');\nexport const cite = assembly('cite');\nexport const code = assembly('code');\nexport const col = assembly('col');\nexport const colgroup = assembly('colgroup');\nexport const command = assembly('command');\nexport const dd = assembly('dd');\nexport const del = assembly('del');\nexport const dfn = assembly('dfn');\nexport const div = assembly('DIV');\nexport const dl = assembly('dl');\nexport const doctype = assembly('doctype');\nexport const dt = assembly('dt');\nexport const em = assembly('em');\nexport const embed = assembly('embed');\nexport const fieldset = assembly('fieldset');\nexport const figcaption = assembly('figcaption');\nexport const figure = assembly('figure');\nexport const footer = assembly('footer');\nexport const form = assembly('form');\nexport const h1 = assembly('h1');\nexport const h2 = assembly('h2');\nexport const h3 = assembly('h3');\nexport const h4 = assembly('h4');\nexport const h5 = assembly('h5');\nexport const h6 = assembly('h6');\nexport const header = assembly('header');\nexport const hgroup = assembly('hgroup');\nexport const hr = assembly('hr');\nexport const html = assembly('html');\nexport const i = assembly('i');\nexport const iframe = assembly('iframe');\nexport const img = assembly('img');\nexport const input = assembly('input');\nexport const ins = assembly('ins');\nexport const kbd = assembly('kbd');\nexport const keygen = assembly('keygen');\nexport const label = assembly('label');\nexport const legend = assembly('legend');\nexport const li = assembly('li');\nexport const link = assembly('link');\nexport const map = assembly('map');\nexport const mark = assembly('mark');\nexport const menu = assembly('menu');\nexport const meta = assembly('meta');\nexport const nav = assembly('nav');\nexport const noscript = assembly('noscript');\nexport const object = assembly('object');\nexport const ol = assembly('ol');\nexport const optgroup = assembly('optgroup');\nexport const option = assembly('option');\nexport const p = assembly('p');\nexport const param = assembly('param');\nexport const pre = assembly('pre');\nexport const progress = assembly('progress');\nexport const q = assembly('q');\nexport const rp = assembly('rp');\nexport const rt = assembly('rt');\nexport const ruby = assembly('ruby');\nexport const s = assembly('s');\nexport const samp = assembly('samp');\nexport const script = assembly('script');\nexport const section = assembly('section');\nexport const select = assembly('select');\nexport const small = assembly('small');\nexport const source = assembly('source');\nexport const span = assembly('span');\nexport const strong = assembly('strong');\nexport const style = assembly('style');\nexport const sub = assembly('sub');\nexport const sup = assembly('sup');\nexport const table = assembly('table');\nexport const tbody = assembly('tbody');\nexport const td = assembly('td');\nexport const textarea = assembly('textarea');\nexport const tfoot = assembly('tfoot');\nexport const th = assembly('th');\nexport const thead = assembly('thead');\nexport const title = assembly('title');\nexport const tr = assembly('tr');\nexport const ul = assembly('ul');\nexport const Var = assembly('var'); // First capital\nexport const video = assembly('video');\n\n// SVG Elements.\nexport const svg = assembly('svg', true);\nexport const altGlyph = assembly('altGlyph', true);\nexport const altGlyphDef = assembly('altGlyphDef', true);\nexport const altGlyphItem = assembly('altGlyphItem', true);\nexport const animate = assembly('animate');\nexport const animateColor = assembly('animateColor', true);\nexport const animateMotion = assembly('animateMotion', true);\nexport const animateTransform = assembly('animateTransform', true);\nexport const animation = assembly('animation', true);\nexport const circle = assembly('circle', true);\nexport const clipPath = assembly('clipPath', true);\nexport const colorProfile = assembly('color-profile', true); // color-profile\nexport const cursor = assembly('cursor', true);\nexport const defs = assembly('defs', true);\nexport const desc = assembly('desc', true);\nexport const discard = assembly('discard', true);\nexport const ellipse = assembly('ellipse', true);\nexport const feBlend = assembly('feBlend', true);\nexport const feColorMatrix = assembly('feComposite', true);\nexport const feComponentTransfer = assembly('feComponentTransfer', true);\nexport const feComposite = assembly('feComposite', true);\nexport const feConvolveMatrix = assembly('feConvolveMatrix', true);\nexport const feDiffuseLighting = assembly('feDiffuseLighting', true);\nexport const feDisplacementMap = assembly('feDistantLight', true);\nexport const feDistantLight = assembly('feDistantLight', true);\nexport const feDropShadow = assembly('feDropShadow', true);\nexport const feFlood = assembly('feFlood', true);\nexport const feFuncA = assembly('feFuncA', true);\nexport const feFuncB = assembly('feFuncB', true);\nexport const feFuncG = assembly('feFuncG', true);\nexport const feFuncR = assembly('feFuncR', true);\nexport const feGaussianBlur = assembly('feGaussianBlur', true);\nexport const feImage = assembly('feImage', true);\nexport const feMerge = assembly('feMerge', true);\nexport const feMergeNode = assembly('feMergeNode', true);\nexport const feMorphology = assembly('feMorphology', true);\nexport const feOffset = assembly('feOffset', true);\nexport const fePointLight = assembly('fePointLight', true);\nexport const feSpecularLighting = assembly('feSpecularLighting', true);\nexport const feSpotLight = assembly('feSpotLight', true);\nexport const feTile = assembly('feTile', true);\nexport const feTurbulence = assembly('feTurbulence', true);\nexport const filter = assembly('filter', true);\nexport const font = assembly('font', true);\nexport const fontFace = assembly('font-face', true); // fontFace\nexport const fontFaceFormat = assembly('font-face-format', true); // fontFaceFormat\nexport const fontFaceName = assembly('font-face-name', true); // fontFaceName\nexport const fontFaceSrc = assembly('font-face-src', true); // fontFaceSrc\nexport const fontFaceUri = assembly('font-face-uri', true); // fontFaceUri\nexport const foreignObject = assembly('foreignObject', true);\nexport const g = assembly('g', true);\nexport const glyph = assembly('glyph', true);\nexport const glyphRef = assembly('glyphRef', true);\nexport const handler = assembly('handler', true);\nexport const hatch = assembly('hatch', true);\nexport const hatchpath = assembly('hatchpath', true);\nexport const hkern = assembly('hkern', true);\nexport const image = assembly('image', true);\nexport const line = assembly('line', true);\nexport const linearGradient = assembly('linearGradient', true);\nexport const listener = assembly('listener');\nexport const marker = assembly('marker', true);\nexport const mask = assembly('mask', true);\nexport const mesh = assembly('mesh', true);\nexport const meshgradient = assembly('meshgradient', true);\nexport const meshpatch = assembly('meshpatch', true);\nexport const meshrow = assembly('meshrow', true);\nexport const metadata = assembly('metadata', true);\nexport const missingGlyph = assembly('missing-glyph', true); // missing-glyph\nexport const mpath = assembly('mpath', true);\nexport const path = assembly('path', true);\nexport const pattern = assembly('pattern', true);\nexport const polygon = assembly('polygon', true);\nexport const polyline = assembly('polyline', true);\nexport const prefetch = assembly('prefetch', true);\nexport const radialGradient = assembly('radialGradient', true);\nexport const rect = assembly('rect', true);\nexport const set = assembly('set', true);\nexport const solidColor = assembly('solidColor', true);\nexport const solidcolor = assembly('solidcolor', true);\nexport const Stop = assembly('stop', true); // First capital\nexport const Switch = assembly('switch', true); // First capital\nexport const symbol = assembly('symbol', true);\nexport const tbreak = assembly('tbreak', true);\nexport const text = assembly('text', true);\nexport const textArea = assembly('textArea', true);\nexport const textPath = assembly('textPath', true);\nexport const tref = assembly('tref', true);\nexport const tspan = assembly('tspan', true);\nexport const unknown = assembly('unknown', true);\nexport const use = assembly('use', true);\nexport const view = assembly('view', true);\nexport const vkern = assembly('vkern', true);","const isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\n\n/** \n * The or method explicitly defines a condition between an array of nodes. \n * @param {Array} vNodes - An array of vNodes \n * @param {Number|Array} switch - A number or series of inidcators (as an array) of what elements to display.\n * @exclude {Boolean} exclude - \n * \n */\nexport const or = (vNodes, conditions, exclude) => {\n    const filteredVNodes = [];\n    const filteredIndexes = [];\n\n\n    // Return the vNode of a given index.\n    if (typeof conditions === 'number') {\n        return vNodes[conditions];\n    }\n\n\n    // Ensure toggle is an array. \n    const toggle = typeof conditions === 'string' ? [conditions] : conditions;\n\n\n    // Non-operational.\n    if (!Array.isArray(toggle) || toggle.length === 0) {\n        return vNodes;\n    }\n\n    // Define conditions required.\n    const classes = toggle.filter(e => e.indexOf('.') > -1);\n    const ids = toggle.filter(e => e.indexOf('#') === 0);\n    const tags = toggle.filter(e => /^[a-z0-9]+$/i.test(e));\n    const children = toggle.filter(e => e.indexOf('~') === 0);\n    const indexes = toggle.filter(e => typeof e === 'number');\n\n    const vNodesLength = vNodes.length;\n\n    for (let i = 0; i < vNodesLength; i++) {\n\n        const vNode = vNodes[i];\n        const attributes = vNode.at;\n\n        // Check class.\n        if (classes.length > 0) {\n            classes.forEach(c => {\n                if (attributes.class.includes(c.slice(1))) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n        // Check ids.\n        if (ids.length > 0) {\n            ids.forEach(c => {\n                if (attributes.id === c.slice(1)) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n\n        // Check tags.\n        if (tags.length > 0) {\n            tags.forEach(c => {\n                if (vNode.t.toUpperCase() === c.toUpperCase()) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n\n        // Check children.\n        if (children.length > 0) {\n            children.forEach(x => {\n                const childrenLength = vNode.ch.filter(c => c.t !== 'TEXT' && c.t !== 'COM').length;\n                if (childrenLength == x.slice(1)) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n    }\n\n\n    // Remove duplicate indexes.\n    const indexList = [...(new Set(filteredIndexes))];\n\n\n    if (exclude === true) {\n        return vNodes.filter(function(item, i) {\n            return indexList.indexOf(i) === -1;\n        });\n    } else {\n        indexList.forEach(index => {\n            filteredVNodes.push(vNodes[index]);\n        });\n        return filteredVNodes;\n    }\n}\n\n\n\n/** \n * or is used when you explicitly want the to inidicate\n * that an item is being looped by n times or via data\n * \n * @param {Object|Array} vNodes \n * @param {*} Data \n */\nexport const loop = (vNodes, data) => {\n    const groupVnodes = Array.isArray(vNodes);\n    const hasNumber = typeof data === 'number';\n\n    if (hasNumber) {\n        const loopedVnodes = [];\n        const singleVnode = isPlaneObject(vNodes);\n\n        // Single vnode looped by an integer.\n        if (singleVnode) {\n            for (let i = 0; i < data; i++) {\n                loopedVnodes.push(vNodes);\n            }\n        }\n\n        // Grouped vnode looped by an integer.\n        if (groupVnodes) {\n            for (let i = 0; i < data; i++) {\n                loopedVnodes.push(...vNodes);\n            }\n        }\n        return loopedVnodes;\n    } else {\n        if (typeof vNodes === 'function') {\n            return vNodes(data)\n\n            if (!Array.isArray(loopedVnodes)) {\n                throw new Error('loop() should return an Array of vnodes');\n            }\n        }\n    }\n}","import {\n    div,\n    section,\n    a,\n    ul,\n    li,\n    svg,\n    defs,\n    linearGradient,\n    Stop,\n    h1,\n    h2,\n    ellipse,\n    span,\n    tr,\n    tbody,\n    td\n} from './tags';\nimport { initialize } from './assembly';\nimport { loop, or } from './logic';\n\n\nconst isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\nconst isString = value => typeof value === 'string';\nconst isPrimitive = value => isString(value) || typeof value === 'number';\nconst isFunction = value => typeof value === 'function';\nconst isElement = value => value instanceof Element;\n\n\n\n\n//////////////////\n// test.\nvar startTime;\nvar lastMeasure;\nvar startMeasure = function(name) {\n    startTime = performance.now();\n    lastMeasure = name;\n}\nvar stopMeasure = function() {\n    var last = lastMeasure;\n    if (lastMeasure) {\n        window.setTimeout(function() {\n            lastMeasure = null;\n            var stop = performance.now();\n            var duration = 0;\n            console.log(last + \" took \" + (stop - startTime));\n        }, 0);\n    }\n}\n\nfunction _random(max) {\n    return Math.round(Math.random() * 1000) % max;\n}\n\nconst buildData = (count = 1000) => {\n    let id = 0;\n    var adjectives = [\"pretty\", \"large\", \"big\", \"small\", \"tall\", \"short\", \"long\", \"handsome\", \"plain\", \"quaint\", \"clean\", \"elegant\", \"easy\", \"angry\", \"crazy\", \"helpful\", \"mushy\", \"odd\", \"unsightly\", \"adorable\", \"important\", \"inexpensive\", \"cheap\", \"expensive\", \"fancy\"];\n    var colours = [\"red\", \"yellow\", \"blue\", \"green\", \"pink\", \"brown\", \"purple\", \"brown\", \"white\", \"black\", \"orange\"];\n    var nouns = [\"table\", \"chair\", \"house\", \"bbq\", \"desk\", \"car\", \"pony\", \"cookie\", \"sandwich\", \"burger\", \"pizza\", \"mouse\", \"keyboard\"];\n    var data = [];\n    for (var i = 0; i < count; i++)\n        data.push({ id, label: adjectives[_random(adjectives.length)] + \" \" + colours[_random(colours.length)] + \" \" + nouns[_random(nouns.length)] });\n    return data;\n}\n\nlet thing = [];\nconst lotsData = buildData(10000);\nconsole.log('lotsData', lotsData)\nconst table = dat => tr({ class: 'menu-item' }, [\n    td({ class: 'col-md-1' },\n        dat.id\n    ),\n    td({ class: 'col-md-4' },\n        a({ class: 'lbl' }, dat.label)\n    ),\n    td({ class: 'col-md-1' },\n        a({ class: 'remove' },\n            span({\n                class: 'glyphicon glyphicon-remove remove'\n            })\n        )\n    ),\n    td({ class: 'col-md-6' })\n])\n\nconst buildTable = data => {\n    const arrayOfChildren = [];\n    for (let i = 0; i < data.length; i++) {\n        arrayOfChildren.push(table(data[i]));\n    }\n    console.log('arrayOfChildren', arrayOfChildren)\n    return arrayOfChildren;\n}\n\n//////////////////\n\n\n\n\nconst twitterHref = 'http://google.com';\nconst facebookHref = 'http://facebook.com';\nconst someUI = div({ class: 'wrapper' },\n    div({ id: 'block-social-responsive', class: 'footer__social' },\n        ul({ class: 'menu' },\n            li({ class: 'menu-item' },\n                a({ href: twitterHref, class: 'icon-twitter', target: '_blank' },\n                    'TWITTER'\n                )\n            ),\n            li({ class: 'menu-item' },\n                a({\n                        href: facebookHref,\n                        class: 'icon-fb',\n                        target: '_blank',\n                        _innerHTML: 'HELOOOOOOO',\n                        // event: ['mouseover', (e) => { console.log('THIS ELEMENT', e.target) }, false],\n                        $: { backgroundColor: 'red', color: 'yellow' },\n                        'd-foijfwoeifjw': 2000000000,\n                        name: 'jack'\n                    },\n                    'FACEBOOK'\n                )\n            ),\n            or([\n                div({ class: 'hello', id: 'yeaa' }, 'HELLO'),\n                div({ class: 'foo' }, 'FOO'),\n                a({ class: 'bar', id: 'yeaa' },\n                    h1('This is H TAG 1'),\n                    h2('This is H TAG 2'),\n                    'BAR'\n                ),\n                div({ class: 'baz' }, 'BAZ'),\n                section({ class: 'hello' },\n                    h1('This is H TAG 1'),\n                    h2('This is H TAG 2'),\n                ),\n                section({ class: 'world' }, 'WORLD'),\n            ], ['~2', '.world'], true),\n            // Without variables...\n            li({ class: 'linkedin' },\n                a({ href: 'https://www.linkedin.com/company/208777', class: 'icon-in', target: '_blank' },\n                    'Linkedin'\n                ),\n                `@This is a single line comment`\n            ),\n            loop(li({ style: { backgroundColor: 'pink', fontSize: 20 } }, 'HELLO WORLD'), 5),\n            loop(buildTable, lotsData),\n        )\n    ),\n    section({ id: 'blah', class: 'wefw' }, 'TEST SECTION'),\n    svg({ height: 150, width: 400 },\n        defs(\n            linearGradient({ id: 'grad1', x1: '0%', y1: '0%', x2: '0%', y2: '100%' },\n                Stop({ offset: '0%', style: { 'stop-color': 'rgb(255,0,0)', 'stop-opacity': 1 } }),\n                Stop({ offset: '100%', style: { 'stop-color': 'rgb(255,255,0)', 'stop-opacity': 1 } })\n            )\n        ),\n        ellipse({ cx: 200, cy: 70, rx: 85, ry: 55, fill: 'url(#grad1)' }),\n        'Sorry, your browser does not support inline SVG.'\n    ),\n    `@This comment is outside`,\n)\n\ndocument.addEventListener('click', () => {\n    // startMeasure('Wavefront')\n    const render = initialize('#root', someUI);\n    // stopMeasure();\n\n\n    // setTimeout(() => {\n        console.time('renderAll')\n        render({\n            'li': li({ style: { backgroundColor: 'blue' } }, 'ONE LIST ITEM ')\n        });\n         console.timeEnd('renderAll')\n    // }, 2000)\n}, false);\n\n\n\n// () => {\n//     /**\n//         Two types of templates: \n//         1) Full Templates\n//         2) Partial Templates\n\n//         A full template for example a completely new view/ page \n//         It will be rendered entirely from scratch.\n\n//         A partial template takes the existing cached DOM and patches it with\n//         the minimal number of changes.\n\n//         The difference is that all elements that need to be chached are chached \n//         before each render. There are no dom lookups. \n\n//         - Render full template\n//         -   Chaches\n//         -     \n\n\n//         Full render: \n//          - Updates vDom \n//          - Upda\n//     **/\n\n//     // Reverse DOM.\n//     // getHTML\n//     // This function will only run once on each page refresh.\n//     const serverTemplate = Wavefront.getHTML('#root'); // a vDom to be used as a full template\n\n//     // Static DOM rendering.\n//     // createHTMLString\n//     // Creates HTML string of the DOM from the cache, a given vNode or an element (document) \n//     // This function will only run once on each page refresh.\n//     const serverTemplate = Wavefront.createHTMLString('#root'); // Must match cache \n//     const serverTemplate = Wavefront.createHTMLString(serverTemplate); // From a vNode\n//     const serverTemplate = Wavefront.createHTMLString(document); // The entire document\n\n//     // Initalize. \n//     // i) Take an existing container, \n//     // ii) Cache selectors \n//     // iii) Render a template to the container, \n//     // iv) Returns a render function  \n//     const render = Wavefront.initialize('#root', fullTemplate, '.selector1',\n//         '#selector2', 'nonExistant', '.notExisting') // vnode or element\n\n\n//     /** \n//         render(<function>) // Render cached root selector\n//         render(vNode1, vNode2, vnode3,<function>)  // Renders to the pre-defined selectors \n//         If a selector has not been pre-deined it will throw an error.\n\n//         render.selectors // List all existing selectors as array\n\n//        ....automatic render.replenish() // Updates the cached elements & selectors list (reads from DOM) \n//     */\n\n//     // Example\n//     const increment = (n) => {\n//         n++;\n//         return render('#selector2', () => h1({ class: 'whatever' }, `increment ${n}`))\n//     };\n\n//     document.addEventListener('click', () => increment(4))\n\n\n//     // Updates multiple selectors at once with one template\n//     render('#selector2', '.selector1', () => {\n//             return h2({ class: 'nonExistant' },\n//                 nonExistant('nonExistant'),\n//                 span({ class: '.notExisting' }, 'WHAT')\n//             });\n//     })\n\n\n// // Update newly created selectors with single template\n// render('nonExistant', '.notExisting', () => {\n//     return a({ href: '#', class: 'some-class' })\n// });\n\n\n// // Updates multiple templates for multiple selectors\n// render(() => ({\n//     '.some-selector': div({ class: 'someTemplate' }),\n//     '#some-selector': div({ class: 'someTemplate' }),\n//     'some-selector': div({ class: 'someTemplate' }),\n// }));\n\n\n\n\n\n// // Render all on root\n// render(() => {\n//     return div({ class: 'wrapper' }, 'WHAT')\n// });\n\n// }"],"names":["isPlaneObject","value","toString","call","isString","isPrimitive","isFunction","isElement","Element","isVNode","hasOwnProperty","removeChildren","parentNode","firstChild","removeChild","vDOM","rootElement","fragment","document","createDocumentFragment","SVG_NAMESPACE","node","t","id","at","ch","isSVG","val","length","count","assembly","tagName","inner","args","tagNameStr","attributes","item","childNodes","i","isItemObject","isItemVnode","Array","isArray","push","childNode","type","slice","pid","ix","render","initalRootElement","vNode","isPartial","undefined","renderFragment","log","dummyVDOM","div","appendMultipleNodes","arguments","x","appendChild","dummy","firstElementChild","innerNodes","outerNodeList","fragmentClone","importNode","elementCache","createAndAppendNode","frag","svg","textNode","createTextNode","commentNode","createComment","element","createElementNS","createElement","attributeKeys","Object","keys","attributesLength","attributeKey","indexOf","dataKey","replace","dataset","cleanKey","attributeValue","addEventListener","assign","style","className","class","setAttribute","forEach","searchAndReplace","selector","newVNode","retrieveAll","exchangeChildren","queriedParent","partialElement","queriedParents","querySelectorAll","queriedParentsLength","querySelector","partialRenderInner","partialNodes","partialNodesKeys","partialNodesLength","elementCachekeys","partialNodeKey","partialRender","all","initialize","rootSelector","container","initalVNode","Error","a","h1","h2","li","section","span","table","td","tr","ul","defs","ellipse","linearGradient","Stop","or","vNodes","conditions","exclude","filteredVNodes","filteredIndexes","toggle","classes","filter","e","ids","tags","test","children","indexes","vNodesLength","c","includes","toUpperCase","childrenLength","indexList","Set","index","loop","data","groupVnodes","hasNumber","loopedVnodes","singleVnode","_random","max","Math","round","random","buildData","adjectives","colours","nouns","label","lotsData","console","dat","buildTable","arrayOfChildren","twitterHref","facebookHref","someUI","href","target","backgroundColor","color","fontSize","height","width","x1","y1","x2","y2","offset","cx","cy","rx","ry","fill","time","timeEnd"],"mappings":"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"}