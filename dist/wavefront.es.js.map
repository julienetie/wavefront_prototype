{"version":3,"file":"wavefront.es.js","sources":["../src/assembly.js","../src/tags.js","../src/logic.js","../src/index.js"],"sourcesContent":["import { div } from './tags';\n\nconst isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\nconst isString = value => typeof value === 'string';\nconst isPrimitive = value => isString(value) || typeof value === 'number';\nconst isFunction = value => typeof value === 'function';\nconst isElement = value => value instanceof Element;\n\n\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n/** \n * @param {string} t - Text \n * @param {Number} id - Identity (Not an attribute)\n * @param {Number} ix - Index \n * @param {Object|string} at - Attributes | Primative\n * @param {Array} ch - Children \n */\nconst node = (t, id, at, ch, isSVG) => {\n    switch (t) {\n        case 'primitive':\n            return { t: 'TEXT', id, val: at };\n        case 'comment':\n            return { t: 'COM', id, val: at };\n        default:\n            return isSVG ? {\n                t,\n                id,\n                at,\n                chx: ch.length,\n                ch,\n                svg: true\n            } : {\n                t,\n                id,\n                at,\n                chx: ch.length,\n                ch\n            };\n    }\n}\n\nlet count = 0;\n\n/** \n Assembly is the mechanics of the tag functions. \n A Wavefront template is a set of nested functions\n which act similar to recursion. \n\n The deepest nested tag of the youngest index is\n the first executed tag function.\n\n\n**/\nexport const assembly = (tagName, isSVG) => {\n\n    return function inner(...args) {\n        const tagNameStr = `${tagName}`;\n        let attributes;\n        let item;\n        let childNodes = [];\n        let i;\n        for (i = 0; i < args.length; i++) {\n            item = args[i] || {};\n            let isItemObject = isPlaneObject(item);\n            let isItemVnode = item.hasOwnProperty('t');\n\n            // Check if item is a plane object = attribute.\n            if (isItemObject && !isItemVnode) {\n                // let isSelector = false;\n                attributes = item;\n                continue;\n            }\n\n\n            // Check if item is an array = group of child elements.\n            if (Array.isArray(item)) {\n                childNodes = [...childNodes, ...item];\n                continue;\n            }\n\n            // check if item is not an object, array or function = child element.\n            if (isItemObject && isItemVnode || isPrimitive) {\n                childNodes.push(item);\n                continue;\n            }\n        }\n\n\n\n        for (i = 0; i < childNodes.length; ++i) {\n            const childNode = childNodes[i];\n            if (isPrimitive(childNode)) {\n                let type;\n                let value;\n                if (childNode[0] === '@') {\n                    type = 'comment';\n                    value = childNode.slice(1)\n                } else {\n                    type = 'primitive';\n                    value = childNode;\n                }\n                count++;\n                childNodes[i] = node(type, count, value, null, isSVG);\n            }\n        }\n\n        count++;\n        // Update child nodes with parentId\n        for (i = 0; i < childNodes.length; ++i) {\n            childNodes[i].pid = count;\n            childNodes[i].ix = i;\n        }\n\n        return node(tagNameStr, count, attributes, childNodes, isSVG);\n    }\n}\n\n\n\nexport const renderPartial = (selector) => {\n    const container = document.querySelector(selector);\n    const fragment = document.createDocumentFragment();\n    return (newNode, cache) => {\n        count = 0; // reset counter used for node ids.\n\n        if (cache === undefined) {\n            if (Array.isArray(newNode)) {\n                const wrappedVTree = div({ id: 'dummy' }, newNode);\n                const unWrappedVTree = wrappedVTree.ch;\n\n                function appendMultipleNodes() {\n                    var args = [].slice.call(arguments);\n                    for (var x = 1; x < args.length; x++) {\n                        args[0].appendChild(args[x])\n                    }\n                    return args[0]\n                }\n\n                createAndAppendNode(fragment, wrappedVTree);\n                // }\n                const dummy = fragment.firstElementChild;\n                const innerNodes = dummy.childNodes;\n                const outerNodeList = [];\n                for (let i = 0; i < innerNodes.length; i++) {\n                    outerNodeList.push(innerNodes[i]);\n                }\n                fragment.removeChild(dummy);\n\n                appendMultipleNodes(fragment, ...outerNodeList)\n\n                requestAnimationFrame(() => {\n                    container.appendChild(fragment)\n\n                    /** \n                       Static Rendering:\n                       This will generate the inital state\n                       of the HTML as a string. headers \n                       and other content can be generated \n                       from the front side or modified on the\n                       back end...\n                    **/\n                    // const staticRender = container.outerHTML;\n                    // console.log(staticRender)\n                });\n            } else {\n                // Wrapped element\n                createAndAppendNode(fragment, newNode);\n\n                requestAnimationFrame(() => {\n                    container.appendChild(fragment)\n\n                    /** \n                       Static Rendering:\n                       This will generate the inital state\n                       of the HTML as a string. headers \n                       and other content can be generated \n                       from the front side or modified on the\n                       back end...\n                    **/\n                    // const staticRender = container.outerHTML;\n                    // console.log(staticRender)\n                });\n            }\n        }\n    }\n}\n\n\n\nconst createAndAppendNode = (fragment, node) => {\n    const isSVG = node.svg === true;\n    // TEXT_NODE        3\n    if (node.t === 'TEXT') {\n        const textNode = document.createTextNode(node.val);\n        fragment.appendChild(textNode);\n        return;\n    }\n    // // COMMENT_NODE     8\n    if (node.t === 'COM') {\n        console.log('node.val', node.val)\n        const commentNode = document.createComment(node.val);\n        fragment.appendChild(commentNode);\n        return;\n    }\n\n    // ELEMENT_NODE     1\n    const element = isSVG ? document.createElementNS(SVG_NAMESPACE, node.t) : document.createElement(node.t);\n\n    // Add attributes\n    if (node.at) {\n        const attributes = node.at;\n        const attributeKeys = Object.keys(attributes);\n        const attributesLength = attributeKeys.length;\n\n        for (let i = 0; i < attributesLength; i++) {\n\n            const attributeKey = attributeKeys[i];\n\n            // Standard dataset syntax.\n            if (attributeKey.indexOf('data-') === 0) {\n                const dataKey = attributeKey.replace('data-', '');\n                element.dataset[dataKey] = attributes[attributeKey];\n                continue;\n            }\n            // Shorthand dataset syntax.\n            if (attributeKey.indexOf('d-') === 0) {\n                const dataKey = attributeKey.replace('d-', '');\n                element.dataset[dataKey] = attributes[attributeKey];\n                continue;\n            }\n            // Props: _\n            if (attributeKey[0] === '_') {\n                const cleanKey = attributeKey.replace('_', '');\n                element[cleanKey] = attributes[attributeKey];\n                continue;\n            }\n\n            switch (attributeKey) {\n                case 'e':\n                case 'event':\n                    element.addEventListener(...attributes[attributeKey]);\n                    break;\n                case '$':\n                case 'style':\n                    Object.assign(element.style, attributes[attributeKey]);\n                    break;\n                case 'c':\n                case 'class':\n                    element.className = attributes.class;\n                    break;\n                default:\n                    element.setAttribute(attributeKey, attributes[attributeKey]);\n                    break;\n            }\n        }\n    }\n\n    // Add children\n    fragment.appendChild(element);\n\n    if (Array.isArray(node.ch)) {\n        node.ch.forEach(childNode => {\n            createAndAppendNode(element, childNode)\n        });\n    }\n}","import { assembly } from './assembly';\n\n// HTML Elements.\nexport const a = assembly('a');\nexport const abbr = assembly('abbr');\nexport const address = assembly('address');\nexport const area = assembly('area');\nexport const article = assembly('article');\nexport const aside = assembly('aside');\nexport const audio = assembly('audio');\nexport const childNodes = assembly('childNodes');\nexport const base = assembly('base');\nexport const bdi = assembly('bdi');\nexport const bdo = assembly('bdo');\nexport const blockquote = assembly('blockquote');\nexport const body = assembly('body');\nexport const br = assembly('br');\nexport const button = assembly('button');\nexport const canvas = assembly('canvas');\nexport const caption = assembly('caption');\nexport const cite = assembly('cite');\nexport const code = assembly('code');\nexport const col = assembly('col');\nexport const colgroup = assembly('colgroup');\nexport const command = assembly('command');\nexport const dd = assembly('dd');\nexport const del = assembly('del');\nexport const dfn = assembly('dfn');\nexport const div = assembly('DIV');\nexport const dl = assembly('dl');\nexport const doctype = assembly('doctype');\nexport const dt = assembly('dt');\nexport const em = assembly('em');\nexport const embed = assembly('embed');\nexport const fieldset = assembly('fieldset');\nexport const figcaption = assembly('figcaption');\nexport const figure = assembly('figure');\nexport const footer = assembly('footer');\nexport const form = assembly('form');\nexport const h1 = assembly('h1');\nexport const h2 = assembly('h2');\nexport const h3 = assembly('h3');\nexport const h4 = assembly('h4');\nexport const h5 = assembly('h5');\nexport const h6 = assembly('h6');\nexport const header = assembly('header');\nexport const hgroup = assembly('hgroup');\nexport const hr = assembly('hr');\nexport const html = assembly('html');\nexport const i = assembly('i');\nexport const iframe = assembly('iframe');\nexport const img = assembly('img');\nexport const input = assembly('input');\nexport const ins = assembly('ins');\nexport const kbd = assembly('kbd');\nexport const keygen = assembly('keygen');\nexport const label = assembly('label');\nexport const legend = assembly('legend');\nexport const li = assembly('li');\nexport const link = assembly('link');\nexport const map = assembly('map');\nexport const mark = assembly('mark');\nexport const menu = assembly('menu');\nexport const meta = assembly('meta');\nexport const nav = assembly('nav');\nexport const noscript = assembly('noscript');\nexport const object = assembly('object');\nexport const ol = assembly('ol');\nexport const optgroup = assembly('optgroup');\nexport const option = assembly('option');\nexport const p = assembly('p');\nexport const param = assembly('param');\nexport const pre = assembly('pre');\nexport const progress = assembly('progress');\nexport const q = assembly('q');\nexport const rp = assembly('rp');\nexport const rt = assembly('rt');\nexport const ruby = assembly('ruby');\nexport const s = assembly('s');\nexport const samp = assembly('samp');\nexport const script = assembly('script');\nexport const section = assembly('section');\nexport const select = assembly('select');\nexport const small = assembly('small');\nexport const source = assembly('source');\nexport const span = assembly('span');\nexport const strong = assembly('strong');\nexport const style = assembly('style');\nexport const sub = assembly('sub');\nexport const sup = assembly('sup');\nexport const table = assembly('table');\nexport const tbody = assembly('tbody');\nexport const td = assembly('td');\nexport const textarea = assembly('textarea');\nexport const tfoot = assembly('tfoot');\nexport const th = assembly('th');\nexport const thead = assembly('thead');\nexport const title = assembly('title');\nexport const tr = assembly('tr');\nexport const ul = assembly('ul');\nexport const Var = assembly('var'); // First capital\nexport const video = assembly('video');\n\n// SVG Elements.\nexport const svg = assembly('svg', true);\nexport const altGlyph = assembly('altGlyph', true);\nexport const altGlyphDef = assembly('altGlyphDef', true);\nexport const altGlyphItem = assembly('altGlyphItem', true);\nexport const animate = assembly('animate');\nexport const animateColor = assembly('animateColor', true);\nexport const animateMotion = assembly('animateMotion', true);\nexport const animateTransform = assembly('animateTransform', true);\nexport const animation = assembly('animation', true);\nexport const circle = assembly('circle', true);\nexport const clipPath = assembly('clipPath', true);\nexport const colorProfile = assembly('color-profile', true); // color-profile\nexport const cursor = assembly('cursor', true);\nexport const defs = assembly('defs', true);\nexport const desc = assembly('desc', true);\nexport const discard = assembly('discard', true);\nexport const ellipse = assembly('ellipse', true);\nexport const feBlend = assembly('feBlend', true);\nexport const feColorMatrix = assembly('feComposite', true);\nexport const feComponentTransfer = assembly('feComponentTransfer', true);\nexport const feComposite = assembly('feComposite', true);\nexport const feConvolveMatrix = assembly('feConvolveMatrix', true);\nexport const feDiffuseLighting = assembly('feDiffuseLighting', true);\nexport const feDisplacementMap = assembly('feDistantLight', true);\nexport const feDistantLight = assembly('feDistantLight', true);\nexport const feDropShadow = assembly('feDropShadow', true);\nexport const feFlood = assembly('feFlood', true);\nexport const feFuncA = assembly('feFuncA', true);\nexport const feFuncB = assembly('feFuncB', true);\nexport const feFuncG = assembly('feFuncG', true);\nexport const feFuncR = assembly('feFuncR', true);\nexport const feGaussianBlur = assembly('feGaussianBlur', true);\nexport const feImage = assembly('feImage', true);\nexport const feMerge = assembly('feMerge', true);\nexport const feMergeNode = assembly('feMergeNode', true);\nexport const feMorphology = assembly('feMorphology', true);\nexport const feOffset = assembly('feOffset', true);\nexport const fePointLight = assembly('fePointLight', true);\nexport const feSpecularLighting = assembly('feSpecularLighting', true);\nexport const feSpotLight = assembly('feSpotLight', true);\nexport const feTile = assembly('feTile', true);\nexport const feTurbulence = assembly('feTurbulence', true);\nexport const filter = assembly('filter', true);\nexport const font = assembly('font', true);\nexport const fontFace = assembly('font-face', true); // fontFace\nexport const fontFaceFormat = assembly('font-face-format', true); // fontFaceFormat\nexport const fontFaceName = assembly('font-face-name', true); // fontFaceName\nexport const fontFaceSrc = assembly('font-face-src', true); // fontFaceSrc\nexport const fontFaceUri = assembly('font-face-uri', true); // fontFaceUri\nexport const foreignObject = assembly('foreignObject', true);\nexport const g = assembly('g', true);\nexport const glyph = assembly('glyph', true);\nexport const glyphRef = assembly('glyphRef', true);\nexport const handler = assembly('handler', true);\nexport const hatch = assembly('hatch', true);\nexport const hatchpath = assembly('hatchpath', true);\nexport const hkern = assembly('hkern', true);\nexport const image = assembly('image', true);\nexport const line = assembly('line', true);\nexport const linearGradient = assembly('linearGradient', true);\nexport const listener = assembly('listener');\nexport const marker = assembly('marker', true);\nexport const mask = assembly('mask', true);\nexport const mesh = assembly('mesh', true);\nexport const meshgradient = assembly('meshgradient', true);\nexport const meshpatch = assembly('meshpatch', true);\nexport const meshrow = assembly('meshrow', true);\nexport const metadata = assembly('metadata', true);\nexport const missingGlyph = assembly('missing-glyph', true); // missing-glyph\nexport const mpath = assembly('mpath', true);\nexport const path = assembly('path', true);\nexport const pattern = assembly('pattern', true);\nexport const polygon = assembly('polygon', true);\nexport const polyline = assembly('polyline', true);\nexport const prefetch = assembly('prefetch', true);\nexport const radialGradient = assembly('radialGradient', true);\nexport const rect = assembly('rect', true);\nexport const set = assembly('set', true);\nexport const solidColor = assembly('solidColor', true);\nexport const solidcolor = assembly('solidcolor', true);\nexport const Stop = assembly('stop', true); // First capital\nexport const Switch = assembly('switch', true); // First capital\nexport const symbol = assembly('symbol', true);\nexport const tbreak = assembly('tbreak', true);\nexport const text = assembly('text', true);\nexport const textArea = assembly('textArea', true);\nexport const textPath = assembly('textPath', true);\nexport const tref = assembly('tref', true);\nexport const tspan = assembly('tspan', true);\nexport const unknown = assembly('unknown', true);\nexport const use = assembly('use', true);\nexport const view = assembly('view', true);\nexport const vkern = assembly('vkern', true);","const isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\n\n/** \n * The or method explicitly defines a condition between an array of nodes. \n * @param {Array} vNodes - An array of vNodes \n * @param {Number|Array} switch - A number or series of inidcators (as an array) of what elements to display.\n * @exclude {Boolean} exclude - \n * \n */\nexport const or = (vNodes, conditions, exclude) => {\n    const filteredVNodes = [];\n    const filteredIndexes = [];\n\n\n    // Return the vNode of a given index.\n    if (typeof conditions === 'number') {\n        return vNodes[conditions];\n    }\n\n\n    // Ensure toggle is an array. \n    const toggle = typeof conditions === 'string' ? [conditions] : conditions;\n\n\n    // Non-operational.\n    if (!Array.isArray(toggle) || toggle.length === 0) {\n        return vNodes;\n    }\n\n    // Define conditions required.\n    const classes = toggle.filter(e => e.indexOf('.') > -1);\n    const ids = toggle.filter(e => e.indexOf('#') === 0);\n    const tags = toggle.filter(e => /^[a-z0-9]+$/i.test(e));\n    const children = toggle.filter(e => e.indexOf('~') === 0);\n    const indexes = toggle.filter(e => typeof e === 'number');\n\n    const vNodesLength = vNodes.length;\n\n    for (let i = 0; i < vNodesLength; i++) {\n\n        const vNode = vNodes[i];\n        const attributes = vNode.at;\n\n        // Check class.\n        if (classes.length > 0) {\n            classes.forEach(c => {\n                if (attributes.class.includes(c.slice(1))) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n        // Check ids.\n        if (ids.length > 0) {\n            ids.forEach(c => {\n                if (attributes.id === c.slice(1)) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n\n        // Check tags.\n        if (tags.length > 0) {\n            tags.forEach(c => {\n                if (vNode.t.toUpperCase() === c.toUpperCase()) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n\n        // Check children.\n        if (children.length > 0) {\n            children.forEach(x => {\n                const childrenLength = vNode.ch.filter(c => c.t !== 'TEXT' && c.t !== 'COM').length;\n                if (childrenLength == x.slice(1)) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n    }\n\n\n    // Remove duplicate indexes.\n    const indexList = [...(new Set(filteredIndexes))];\n\n\n    if (exclude === true) {\n        return vNodes.filter(function(item, i) {\n            return indexList.indexOf(i) === -1;\n        });\n    } else {\n        indexList.forEach(index => {\n            filteredVNodes.push(vNodes[index]);\n        });\n        return filteredVNodes;\n    }\n}\n\n\n\n/** \n * or is used when you explicitly want the to inidicate\n * that an item is being looped by n times or via data\n * \n * @param {Object|Array} vNodes \n * @param {*} Data \n */\nexport const loop = (vNodes, data) => {\n    const groupVnodes = Array.isArray(vNodes);\n    const hasNumber = typeof data === 'number';\n\n    if (hasNumber) {\n        const loopedVnodes = [];\n        const singleVnode = isPlaneObject(vNodes);\n\n        // Single vnode looped by an integer.\n        if (singleVnode) {\n            for (let i = 0; i < data; i++) {\n                loopedVnodes.push(vNodes);\n            }\n        }\n\n        // Grouped vnode looped by an integer.\n        if (groupVnodes) {\n            for (let i = 0; i < data; i++) {\n                loopedVnodes.push(...vNodes);\n            }\n        }\n        return loopedVnodes;\n    } else {\n        if (typeof vNodes === 'function') {\n            return vNodes(data)\n\n            if (!Array.isArray(loopedVnodes)) {\n                throw new Error('loop() should return an Array of vnodes');\n            }\n        }\n    }\n}","import {\n    div,\n    section,\n    a,\n    ul,\n    li,\n    svg,\n    defs,\n    linearGradient,\n    Stop,\n    h1,\n    h2,\n    ellipse,\n    span,\n    tr,\n    tbody,\n    td\n} from './tags';\nimport { renderPartial } from './assembly';\nimport { loop, or } from './logic';\n\n\nconst isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\nconst isString = value => typeof value === 'string';\nconst isPrimitive = value => isString(value) || typeof value === 'number';\nconst isFunction = value => typeof value === 'function';\nconst isElement = value => value instanceof Element;\n\n\n\n\n//////////////////\n// test.\nvar startTime;\nvar lastMeasure;\nvar startMeasure = function(name) {\n    startTime = performance.now();\n    lastMeasure = name;\n}\nvar stopMeasure = function() {\n    var last = lastMeasure;\n    if (lastMeasure) {\n        window.setTimeout(function() {\n            lastMeasure = null;\n            var stop = performance.now();\n            var duration = 0;\n            console.log(last + \" took \" + (stop - startTime));\n        }, 0);\n    }\n}\n\nfunction _random(max) {\n    return Math.round(Math.random() * 1000) % max;\n}\n\nconst buildData = (count = 1000) => {\n    let id = 0;\n    var adjectives = [\"pretty\", \"large\", \"big\", \"small\", \"tall\", \"short\", \"long\", \"handsome\", \"plain\", \"quaint\", \"clean\", \"elegant\", \"easy\", \"angry\", \"crazy\", \"helpful\", \"mushy\", \"odd\", \"unsightly\", \"adorable\", \"important\", \"inexpensive\", \"cheap\", \"expensive\", \"fancy\"];\n    var colours = [\"red\", \"yellow\", \"blue\", \"green\", \"pink\", \"brown\", \"purple\", \"brown\", \"white\", \"black\", \"orange\"];\n    var nouns = [\"table\", \"chair\", \"house\", \"bbq\", \"desk\", \"car\", \"pony\", \"cookie\", \"sandwich\", \"burger\", \"pizza\", \"mouse\", \"keyboard\"];\n    var data = [];\n    for (var i = 0; i < count; i++)\n        data.push({ id, label: adjectives[_random(adjectives.length)] + \" \" + colours[_random(colours.length)] + \" \" + nouns[_random(nouns.length)] });\n    return data;\n}\n\nlet thing = [];\nconst lotsData = buildData(10000);\nconsole.log('lotsData',lotsData)\nconst table = dat => tr({ class: 'menu-item' }, [\n    td({ class: 'col-md-1' },\n        dat.id\n    ),\n    td({ class: 'col-md-4' },\n        a({ class: 'lbl' }, dat.label)\n    ),\n    td({ class: 'col-md-1' },\n        a({ class: 'remove' },\n            span({\n                class: 'glyphicon glyphicon-remove remove'\n            })\n        )\n    ),\n    td({ class: 'col-md-6' })\n])\n\nconst buildTable = data => {\n    const arrayOfChildren = [];\n    for (let i = 0; i < data.length; i++) {\n        arrayOfChildren.push(table(data[i]));\n    }\n    console.log('arrayOfChildren', arrayOfChildren)\n    return arrayOfChildren;\n}\n\n//////////////////\n\n\n\n\nconst twitterHref = 'http://google.com';\nconst facebookHref = 'http://facebook.com';\nconst someUI = div({ class: 'wrapper' },\n    div({ id: 'block-social-responsive', class: 'footer__social' },\n        ul({ class: 'menu' },\n            li({ class: 'menu-item' },\n                a({ href: twitterHref, class: 'icon-twitter', target: '_blank' },\n                    'TWITTER'\n                )\n            ),\n            li({ class: 'menu-item' },\n                a({\n                        href: facebookHref,\n                        class: 'icon-fb',\n                        target: '_blank',\n                        _innerHTML: 'HELOOOOOOO',\n                        // event: ['mouseover', (e) => { console.log('THIS ELEMENT', e.target) }, false],\n                        $: { backgroundColor: 'red', color: 'yellow' },\n                        'd-foijfwoeifjw': 2000000000,\n                        name: 'jack'\n                    },\n                    'FACEBOOK'\n                )\n            ),\n            or([\n                div({ class: 'hello', id: 'yeaa' }, 'HELLO'),\n                div({ class: 'foo' }, 'FOO'),\n                a({ class: 'bar', id: 'yeaa' },\n                    h1('This is H TAG 1'),\n                    h2('This is H TAG 2'),\n                    'BAR'\n                ),\n                div({ class: 'baz' }, 'BAZ'),\n                section({ class: 'hello' },\n                    h1('This is H TAG 1'),\n                    h2('This is H TAG 2'),\n                ),\n                section({ class: 'world' }, 'WORLD'),\n            ], ['~2', '.world'], true),\n            // Without variables...\n            li({ class: 'menu-item' },\n                a({ href: 'https://www.linkedin.com/company/208777', class: 'icon-in', target: '_blank' },\n                    'Linkedin'\n                ),\n                `@This is a single line comment`\n            ),\n            loop(li({ style: { backgroundColor: 'pink', fontSize: 20 } }, 'HELLO WORLD'), 5),\n            loop(buildTable, lotsData),\n        )\n    ),\n    section({ id: 'blah', class: 'wefw' }, 'TEST SECTION'),\n    svg({ height: 150, width: 400 },\n        defs(\n            linearGradient({ id: 'grad1', x1: '0%', y1: '0%', x2: '0%', y2: '100%' },\n                Stop({ offset: '0%', style: { 'stop-color': 'rgb(255,0,0)', 'stop-opacity': 1 } }),\n                Stop({ offset: '100%', style: { 'stop-color': 'rgb(255,255,0)', 'stop-opacity': 1 } })\n            )\n        ),\n        ellipse({ cx: 200, cy: 70, rx: 85, ry: 55, fill: 'url(#grad1)' }),\n        'Sorry, your browser does not support inline SVG.'\n    ),\n    `@This comment is outside`,\n)\n\n\ndocument.addEventListener('click', () => {\n    startMeasure('Wavefront')\n    const render = renderPartial('#root');\n    render(someUI);\n    stopMeasure();\n}, false);"],"names":["isPlaneObject","value","toString","call","isString","isPrimitive","isFunction","isElement","SVG_NAMESPACE","node","t","id","at","ch","isSVG","val","length","count","assembly","tagName","inner","args","tagNameStr","attributes","item","childNodes","i","isItemObject","isItemVnode","hasOwnProperty","Array","isArray","push","childNode","type","slice","pid","ix","renderPartial","selector","container","document","querySelector","fragment","createDocumentFragment","newNode","cache","undefined","wrappedVTree","div","unWrappedVTree","appendMultipleNodes","arguments","x","appendChild","dummy","firstElementChild","innerNodes","outerNodeList","removeChild","createAndAppendNode","svg","textNode","createTextNode","log","commentNode","createComment","element","createElementNS","createElement","attributeKeys","Object","keys","attributesLength","attributeKey","indexOf","dataKey","replace","dataset","cleanKey","addEventListener","assign","style","className","class","setAttribute","forEach","a","h1","h2","li","section","span","table","td","tr","ul","defs","ellipse","linearGradient","Stop","or","vNodes","conditions","exclude","filteredVNodes","filteredIndexes","toggle","classes","filter","e","ids","tags","test","children","indexes","vNodesLength","vNode","c","includes","toUpperCase","childrenLength","indexList","Set","index","loop","data","groupVnodes","hasNumber","loopedVnodes","singleVnode","Error","startTime","lastMeasure","startMeasure","name","performance","now","stopMeasure","last","setTimeout","stop","duration","_random","max","Math","round","random","buildData","adjectives","colours","nouns","label","lotsData","console","dat","buildTable","arrayOfChildren","twitterHref","facebookHref","someUI","href","target","backgroundColor","color","fontSize","height","width","x1","y1","x2","y2","offset","cx","cy","rx","ry","fill","render"],"mappings":"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"}