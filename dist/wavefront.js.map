{"version":3,"file":"wavefront.js","sources":["../src/helpers.js","../src/assembly.js","../src/logic.js","../src/tags.js"],"sourcesContent":["export const isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\nexport const isString = value => typeof value === 'string';\nexport const isPrimitive = value => isString(value) || typeof value === 'number';\nexport const isFunction = value => typeof value === 'function';\nexport const isElement = value => value instanceof Element;\nexport const isVNode = value  => value.hasOwnProperty('t') && value.hasOwnProperty('id');\nexport const removeChildren = parentNode => {\n  while (parentNode.firstChild) {\n    parentNode.removeChild(parentNode.firstChild);\n  }\n}","import {\n    isPlaneObject,\n    isString,\n    isPrimitive,\n    isFunction,\n    isElement,\n    isVNode,\n    removeChildren\n} from './helpers';\n\n\nlet vDOM;\nlet rootElement;\nconst fragment = document.createDocumentFragment();\n\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n/** \n * @param {string} t - Text \n * @param {Number} id - Identity (Not an attribute)\n * @param {Number} ix - Index \n * @param {Object|string} at - Attributes | Primative\n * @param {Array} ch - Children \n */\nconst node = (t, id, at, ch, isSVG) => {\n    switch (t) {\n        case 'primitive':\n            return { t: 'TEXT', id, val: at };\n        case 'comment':\n            return { t: 'COM', id, val: at };\n        default:\n            return isSVG ? {\n                t,\n                id,\n                at,\n                chx: ch.length,\n                ch,\n                svg: true\n            } : {\n                t,\n                id,\n                at,\n                chx: ch.length,\n                ch\n            };\n    }\n}\n\nlet count = 0;\n\n/** \n Assembly is the mechanics of the tag functions. \n A Wavefront template is a set of nested functions\n which act similar to recursion. \n\n The deepest nested tag of the youngest index is\n the first executed tag function.\n\n\n**/\nexport const assembly = (tagName, nodeType) => {\n    const isSVG = nodeType === true;\n\n    // if (typeof nodeType === 'function') {\n    //     if (tagName.indexOf('-') >= 0) {\n    //         // Define the custom element. \n    //         window.customElements.define(tagName, nodeType);\n    //     } else {\n    //         throw new Error(`Invalid custom element name ${tagName}`);\n    //     }\n    // }\n\n    return function inner(...args) {\n        const tagNameStr = `${tagName}`;\n        let attributes;\n        let item;\n        let childNodes = [];\n        let i;\n        for (i = 0; i < args.length; i++) {\n            item = args[i] || {};\n            let isItemObject = isPlaneObject(item);\n            let isItemVnode = item.hasOwnProperty('t');\n\n            // Check if item is a plane object = attribute.\n            if (isItemObject && !isItemVnode) {\n                // let isSelector = false; \n                attributes = item;\n                continue;\n            }\n\n\n            // Check if item is an array = group of child elements.\n            if (Array.isArray(item)) {\n                childNodes = [...childNodes, ...item];\n                continue;\n            }\n\n            // check if item is not an object, array or function = child element.\n            if (isItemObject && isItemVnode || isPrimitive(item)) {\n                childNodes.push(item);\n                continue;\n            }\n\n\n            if (item instanceof Node) {\n                //@TODO Convert item to vNode and push;\n                console.log('item in assembly', item)\n                childNodes.push({ el: item });\n                // continue;\n            }\n        }\n\n\n\n        for (i = 0; i < childNodes.length; ++i) {\n            const childNode = childNodes[i];\n            if (isPrimitive(childNode)) {\n                let type;\n                let value;\n                if (childNode[0] === '@') {\n                    type = 'comment';\n                    value = childNode.slice(1)\n                } else {\n                    type = 'primitive';\n                    value = childNode;\n                }\n                count++;\n                childNodes[i] = node(type, count, value, null, isSVG);\n            }\n        }\n\n        count++;\n        // Update child nodes with parentId\n        for (i = 0; i < childNodes.length; ++i) {\n            childNodes[i].pid = count;\n            childNodes[i].ix = i;\n        }\n\n        return node(tagNameStr, count, attributes, childNodes, isSVG);\n    }\n}\n\nvar removeChilds = function(node) {\n    var last;\n    while (last = node.lastChild) node.removeChild(last);\n};\n\n\nconst render = (initalRootElement, vNode, isPartial) => {\n    console.log('X',vNode)\n    // Cache root element \n    if (rootElement === undefined) {\n        rootElement = initalRootElement;\n    }\n    // Creates a new fragment for partials but uses \n    // the fragment cache for the inital render.\n    // const renderFragment = isPartial === true ? (document.createDocumentFragment()) : fragment; \n    // console.log('renderFragment', document.createDocumentFragment())\n    let renderFragment;\n    if (isPartial === true) {\n        renderFragment = document.createDocumentFragment()\n    } else {\n        renderFragment = fragment;\n    }\n\n    const node = isPartial === true ? vNode : vDOM;\n\n    count = 0; // reset counter used for node ids.\n\n\n\n    if (Array.isArray(node)) {\n\n        const dummyVDOM = {\n            \"t\": \"div\",\n            \"id\": 2,\n            \"at\": {\n                \"id\": \"dummy\"\n            },\n            \"chx\": 1,\n            \"ch\": node\n        }\n\n        function appendMultipleNodes() {\n            var args = [].slice.call(arguments);\n            for (var x = 1; x < args.length; x++) {\n                args[0].appendChild(args[x])\n            }\n            return args[0]\n        }\n\n        createAndAppendNode(renderFragment, dummyVDOM);\n        // }\n        const dummy = renderFragment.firstElementChild;\n        const innerNodes = dummy.childNodes;\n        const outerNodeList = [];\n        for (let i = 0; i < innerNodes.length; i++) {\n            outerNodeList.push(innerNodes[i]);\n        }\n        renderFragment.removeChild(dummy);\n\n        appendMultipleNodes(renderFragment, ...outerNodeList)\n\n        requestAnimationFrame(() => {\n            rootElement.appendChild(renderFragment)\n\n            /** \n               Static Rendering:\n               This will generate the inital state\n               of the HTML as a string. headers \n               and other content can be generated \n               from the front side or modified on the\n               back end...\n            **/\n            // const staticRender = rootElement.outerHTML;\n            // console.log(staticRender)\n        });\n    } else {\n        // Wrapped element\n\n        createAndAppendNode(renderFragment, node);\n\n        // console.log('elementCache', elementCache)\n        requestAnimationFrame(() => {\n            // if (isPartial) {\n            //     removeChilds(rootElement)\n            // }\n            if (!isPartial) {\n                console.log()\n                const fragmentClone = document.importNode(renderFragment, true);\n                rootElement.appendChild(fragmentClone)\n            }\n            // console.log('FINAL FRAGMENT', renderFragment)\n            /** \n               Static Rendering:\n               This will generate the inital state\n               of the HTML as a string. headers \n               and other content can be generated \n               from the front side or modified on the\n               back end...\n            **/\n            // const staticRender = rootElement.outerHTML;\n            // console.log(staticRender)\n            return;\n        });\n    }\n\n    return renderFragment;\n}\n\n// const elementCache = {\n//     class: {},\n//     id: {},\n//     nonexistent: []\n// }\nconst elementCache = {}\n\nconst createAndAppendNode = (frag, node) => {\n    const isSVG = node.svg === true;\n\n    // TEXT_NODE        3\n    if (node.t === 'TEXT') {\n        const textNode = document.createTextNode(node.val);\n        frag.appendChild(textNode);\n        return;\n    }\n    // // COMMENT_NODE     8\n    if (node.t === 'COM') {\n        // console.log('node.val', node.val)\n        const commentNode = document.createComment(node.val);\n        frag.appendChild(commentNode);\n        return;\n    }\n    // console.log('notAnElement', node)\n    const notAnElement = !node.hasOwnProperty('el');\n\n    let element;\n\n    if (notAnElement) {\n        // ELEMENT_NODE     1\n        element = isSVG ? document.createElementNS(SVG_NAMESPACE, node.t) : document.createElement(node.t);\n\n        // Add attributes\n        if (node.at) {\n            const attributes = node.at;\n            const attributeKeys = Object.keys(attributes);\n            const attributesLength = attributeKeys.length;\n\n            for (let i = 0; i < attributesLength; i++) {\n                const attributeKey = attributeKeys[i];\n\n                // Standard dataset syntax.\n                if (attributeKey.indexOf('data-') === 0) {\n                    const dataKey = attributeKey.replace('data-', '');\n                    element.dataset[dataKey] = attributes[attributeKey];\n                    continue;\n                }\n                // Shorthand dataset syntax.\n                if (attributeKey.indexOf('d-') === 0) {\n                    const dataKey = attributeKey.replace('d-', '');\n                    element.dataset[dataKey] = attributes[attributeKey];\n                    continue;\n                }\n                // Props: _\n                if (attributeKey[0] === '_') {\n                    const cleanKey = attributeKey.replace('_', '');\n                    element[cleanKey] = attributes[attributeKey];\n                    continue;\n                }\n\n                const attributeValue = attributes[attributeKey];\n\n                switch (attributeKey) {\n                    case 'e':\n                    case 'event':\n                        element.addEventListener(...attributeValue);\n                        break;\n                    case '$':\n                    case 'style':\n                        Object.assign(element.style, attributeValue);\n                        break;\n                    case 'c':\n                    case 'class':\n                        element.className = attributes.class;\n                        break;\n                    default:\n                        element.setAttribute(attributeKey, attributeValue);\n                        break;\n                }\n            }\n        }\n    } else {\n        console.log('ELEMENT', node.el)\n        element = node.el;\n    }\n    // Add children\n    frag.appendChild(element);\n\n    if (notAnElement && Array.isArray(node.ch)) {\n        node.ch.forEach(childNode => {\n            createAndAppendNode(element, childNode)\n        });\n    }\n}\n\n\nconst fullTemplate = {\n    \"t\": \"DIV\",\n    \"id\": 90046,\n    \"at\": {\n        \"class\": \"thisClass\",\n        \"id\": \"thisID\",\n        \"style\": {\n            \"display\": \"block\",\n            \"background\": 'red',\n            \"padding\": \"1rem\"\n        }\n    },\n    \"chx\": 1,\n    \"ch\": [{\n            \"t\": \"TEXT\",\n            \"id\": 90045,\n            \"val\": \"THIS IS A FULL TEMPLATE\",\n            \"pid\": 90046,\n            \"ix\": 0\n        },\n        {\n            \"t\": \"DIV\",\n            \"id\": 90046,\n            \"at\": {\n                \"class\": \"thisClass\",\n                \"style\": {\n                    \"display\": \"block\",\n                    \"background\": 'red',\n                    \"padding\": \"1rem\"\n                }\n            },\n            \"chx\": 1,\n            \"ch\": [{\n                \"t\": \"TEXT\",\n                \"id\": 90045,\n                \"val\": \"THIS IS A child text node\",\n                \"pid\": 90046,\n                \"ix\": 0\n            }]\n        }\n    ]\n}\n\nconst searchAndReplace = (selector, newVNode, retrieveAll) => {\n    const exchangeChildren = (queriedParent) => {\n        // convert the node to an element\n        const partialElement = render(undefined, newVNode, true);\n        // Remove children\n        removeChildren(queriedParent);\n        // Adopt the new element \n        queriedParent.appendChild(partialElement)\n    }\n\n\n    if (retrieveAll) {\n        const queriedParents = fragment.querySelectorAll(selector);\n\n        const queriedParentsLength = queriedParents.length;\n\n        for (let i = 0; i < queriedParentsLength; i++) {\n            exchangeChildren(queriedParents[i])\n        }\n    } else {\n        const queriedParent = fragment.querySelector(selector);\n        // console.log('queriedParent',queriedParent)\n        exchangeChildren(queriedParent)\n    }\n}\n\n\nconst partialRenderInner = (partialNodes, retrieveAll) => {\n\n    const partialNodesKeys = Object.keys(partialNodes);\n    const partialNodesLength = partialNodesKeys.length;\n    const elementCachekeys = Object.keys(elementCache);\n\n    for (let i = 0; i < partialNodesLength; i++) {\n        const partialNodeKey = partialNodesKeys[i];\n        const newVNode = partialNodes[partialNodeKey];\n        console.log('partialNodeKey', newVNode, partialNodeKey)\n\n        searchAndReplace(partialNodeKey, newVNode, retrieveAll);\n\n    }\n\n\n    // Append modified fragment.\n    // Remove children\n    removeChildren(rootElement);\n    const fragmentClone = document.importNode(fragment, true);\n    rootElement.appendChild(fragmentClone);\n}\nconst partialRender = (partialNodes) => partialRenderInner(partialNodes, false);\npartialRender.all = (partialNodes) => partialRenderInner(partialNodes, true);\n\n\n\nexport const initialize = (rootSelector, vNode) => {\n    // allow a string or element as a querySelector value.\n    const container = isElement(rootSelector) ? rootSelector : document.querySelector(rootSelector);\n\n    // Shallowly validate vNode.\n    const initalVNode = isVNode(vNode) ? vNode : false;\n\n    if (initalVNode === false) {\n        throw new Error(`vNode ${vDOM} is not valid`);\n    }\n\n    // Cache valid vDOM\n    vDOM = initalVNode;\n\n    // Render the inital virual DOM and cache the selectors.\n    render(container, false);\n\n    // console.log('initialize', container, vNode, selectors)\n    return partialRender;\n}\n\n// const r = initialize('#root', fullTemplate, '#thisID', '.thisClass', '.childClass');\n\n\n// setTimeout(() => {\n// r({\n//     '.thisClass': {\n//         \"t\": \"DIV\",\n//         \"id\": 90046,\n//         \"at\": {\n//             \"class\": \"new-shit\",\n//             \"style\": {\n//                 \"display\": \"block\",\n//                 \"background\": 'yellow',\n//                 \"padding\": \"1rem\"\n//             }\n//         },\n//         \"chx\": 1,\n//         \"ch\": [{\n//             \"t\": \"TEXT\",\n//             \"id\": 90045,\n//             \"val\": \"NEW SHIT NEW SHIT\",\n//             \"pid\": 90046,\n//             \"ix\": 0\n//         }]\n//     }\n// });\n// }, 2000)","const isPlaneObject = value => ({}).toString.call(value) === '[object Object]';\n\n/** \n * The or method explicitly defines a condition between an array of nodes. \n * @param {Array} vNodes - An array of vNodes \n * @param {Number|Array} switch - A number or series of inidcators (as an array) of what elements to display.\n * @exclude {Boolean} exclude - \n * \n */\nexport const or = (vNodes, conditions, exclude) => {\n    const filteredVNodes = [];\n    const filteredIndexes = [];\n\n\n    // Return the vNode of a given index.\n    if (typeof conditions === 'number') {\n        return vNodes[conditions];\n    }\n\n\n    // Ensure toggle is an array. \n    const toggle = typeof conditions === 'string' ? [conditions] : conditions;\n\n\n    // Non-operational.\n    if (!Array.isArray(toggle) || toggle.length === 0) {\n        return vNodes;\n    }\n\n    // Define conditions required.\n    const classes = toggle.filter(e => e.indexOf('.') > -1);\n    const ids = toggle.filter(e => e.indexOf('#') === 0);\n    const tags = toggle.filter(e => /^[a-z0-9]+$/i.test(e));\n    const children = toggle.filter(e => e.indexOf('~') === 0);\n    const indexes = toggle.filter(e => typeof e === 'number');\n\n    const vNodesLength = vNodes.length;\n\n    for (let i = 0; i < vNodesLength; i++) {\n\n        const vNode = vNodes[i];\n        const attributes = vNode.at;\n\n        // Check class.\n        if (classes.length > 0) {\n            classes.forEach(c => {\n                if (attributes.class.includes(c.slice(1))) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n        // Check ids.\n        if (ids.length > 0) {\n            ids.forEach(c => {\n                if (attributes.id === c.slice(1)) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n\n        // Check tags.\n        if (tags.length > 0) {\n            tags.forEach(c => {\n                if (vNode.t.toUpperCase() === c.toUpperCase()) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n\n\n        // Check children.\n        if (children.length > 0) {\n            children.forEach(x => {\n                const childrenLength = vNode.ch.filter(c => c.t !== 'TEXT' && c.t !== 'COM').length;\n                if (childrenLength == x.slice(1)) {\n                    filteredIndexes.push(i);\n                }\n            });\n        }\n    }\n\n\n    // Remove duplicate indexes.\n    const indexList = [...(new Set(filteredIndexes))];\n\n\n    if (exclude === true) {\n        return vNodes.filter(function(item, i) {\n            return indexList.indexOf(i) === -1;\n        });\n    } else {\n        indexList.forEach(index => {\n            filteredVNodes.push(vNodes[index]);\n        });\n        return filteredVNodes;\n    }\n}\n\n\n\n/** \n * or is used when you explicitly want the to inidicate\n * that an item is being looped by n times or via data\n * \n * @param {Object|Array} vNodes \n * @param {*} Data \n */\nexport const loop = (vNodes, data) => {\n    const groupVnodes = Array.isArray(vNodes);\n    const hasNumber = typeof data === 'number';\n\n    if (hasNumber) {\n        const loopedVnodes = [];\n        const singleVnode = isPlaneObject(vNodes);\n\n        // Single vnode looped by an integer.\n        if (singleVnode) {\n            for (let i = 0; i < data; i++) {\n                loopedVnodes.push(vNodes);\n            }\n        }\n\n        // Grouped vnode looped by an integer.\n        if (groupVnodes) {\n            for (let i = 0; i < data; i++) {\n                loopedVnodes.push(...vNodes);\n            }\n        }\n        return loopedVnodes;\n    } else {\n        if (typeof vNodes === 'function') {\n            return vNodes(data)\n\n            if (!Array.isArray(loopedVnodes)) {\n                throw new Error('loop() should return an Array of vnodes');\n            }\n        }\n    }\n}","import { initialize, assembly } from './assembly';\nimport { loop, or } from './logic';\n// HTML Elements.\nconst tags = ({\n    a: assembly('a'),\n    abbr: assembly('abbr'),\n    address: assembly('address'),\n    area: assembly('area'),\n    article: assembly('article'),\n    aside: assembly('aside'),\n    assembly,\n    audio: assembly('audio'),\n    childNodes: assembly('childNodes'),\n    base: assembly('base'),\n    bdi: assembly('bdi'),\n    bdo: assembly('bdo'),\n    blockquote: assembly('blockquote'),\n    body: assembly('body'),\n    br: assembly('br'),\n    button: assembly('button'),\n    canvas: assembly('canvas'),\n    caption: assembly('caption'),\n    cite: assembly('cite'),\n    code: assembly('code'),\n    col: assembly('col'),\n    colgroup: assembly('colgroup'),\n    command: assembly('command'),\n    dd: assembly('dd'),\n    del: assembly('del'),\n    dfn: assembly('dfn'),\n    div: assembly('div'),\n    dl: assembly('dl'),\n    doctype: assembly('doctype'),\n    dt: assembly('dt'),\n    em: assembly('em'),\n    embed: assembly('embed'),\n    fieldset: assembly('fieldset'),\n    figcaption: assembly('figcaption'),\n    figure: assembly('figure'),\n    footer: assembly('footer'),\n    form: assembly('form'),\n    h1: assembly('h1'),\n    h2: assembly('h2'),\n    h3: assembly('h3'),\n    h4: assembly('h4'),\n    h5: assembly('h5'),\n    h6: assembly('h6'),\n    header: assembly('header'),\n    hgroup: assembly('hgroup'),\n    hr: assembly('hr'),\n    html: assembly('html'),\n    i: assembly('i'),\n    iframe: assembly('iframe'),\n    img: assembly('img'),\n    initialize,\n    input: assembly('input'),\n    ins: assembly('ins'),\n    kbd: assembly('kbd'),\n    keygen: assembly('keygen'),\n    label: assembly('label'),\n    legend: assembly('legend'),\n    li: assembly('li'),\n    link: assembly('link'),\n    loop,\n    map: assembly('map'),\n    mark: assembly('mark'),\n    menu: assembly('menu'),\n    meta: assembly('meta'),\n    nav: assembly('nav'),\n    noscript: assembly('noscript'),\n    object: assembly('object'),\n    ol: assembly('ol'),\n    optgroup: assembly('optgroup'),\n    option: assembly('option'),\n    or,\n    p: assembly('p'),\n    param: assembly('param'),\n    pre: assembly('pre'),\n    progress: assembly('progress'),\n    q: assembly('q'),\n    rp: assembly('rp'),\n    rt: assembly('rt'),\n    ruby: assembly('ruby'),\n    s: assembly('s'),\n    samp: assembly('samp'),\n    script: assembly('script'),\n    section: assembly('section'),\n    select: assembly('select'),\n    small: assembly('small'),\n    source: assembly('source'),\n    span: assembly('span'),\n    strong: assembly('strong'),\n    style: assembly('style'),\n    sub: assembly('sub'),\n    sup: assembly('sup'),\n    table: assembly('table'),\n    tbody: assembly('tbody'),\n    td: assembly('td'),\n    textarea: assembly('textarea'),\n    tfoot: assembly('tfoot'),\n    th: assembly('th'),\n    thead: assembly('thead'),\n    title: assembly('title'),\n    tr: assembly('tr'),\n    ul: assembly('ul'),\n    Var: assembly('var'), // First capital\n    video: assembly('video'),\n\n    // SVG Elements.\n    svg: assembly('svg', true),\n    altGlyph: assembly('altGlyph', true),\n    altGlyphDef: assembly('altGlyphDef', true),\n    altGlyphItem: assembly('altGlyphItem', true),\n    animate: assembly('animate'),\n    animateColor: assembly('animateColor', true),\n    animateMotion: assembly('animateMotion', true),\n    animateTransform: assembly('animateTransform', true),\n    animation: assembly('animation', true),\n    circle: assembly('circle', true),\n    clipPath: assembly('clipPath', true),\n    colorProfile: assembly('color-profile', true), // color-profile\n    cursor: assembly('cursor', true),\n    defs: assembly('defs', true),\n    desc: assembly('desc', true),\n    discard: assembly('discard', true),\n    ellipse: assembly('ellipse', true),\n    feBlend: assembly('feBlend', true),\n    feColorMatrix: assembly('feComposite', true),\n    feComponentTransfer: assembly('feComponentTransfer', true),\n    feComposite: assembly('feComposite', true),\n    feConvolveMatrix: assembly('feConvolveMatrix', true),\n    feDiffuseLighting: assembly('feDiffuseLighting', true),\n    feDisplacementMap: assembly('feDistantLight', true),\n    feDistantLight: assembly('feDistantLight', true),\n    feDropShadow: assembly('feDropShadow', true),\n    feFlood: assembly('feFlood', true),\n    feFuncA: assembly('feFuncA', true),\n    feFuncB: assembly('feFuncB', true),\n    feFuncG: assembly('feFuncG', true),\n    feFuncR: assembly('feFuncR', true),\n    feGaussianBlur: assembly('feGaussianBlur', true),\n    feImage: assembly('feImage', true),\n    feMerge: assembly('feMerge', true),\n    feMergeNode: assembly('feMergeNode', true),\n    feMorphology: assembly('feMorphology', true),\n    feOffset: assembly('feOffset', true),\n    fePointLight: assembly('fePointLight', true),\n    feSpecularLighting: assembly('feSpecularLighting', true),\n    feSpotLight: assembly('feSpotLight', true),\n    feTile: assembly('feTile', true),\n    feTurbulence: assembly('feTurbulence', true),\n    filter: assembly('filter', true),\n    font: assembly('font', true),\n    fontFace: assembly('font-face', true), // fontFace\n    fontFaceFormat: assembly('font-face-format', true), // fontFaceFormat\n    fontFaceName: assembly('font-face-name', true), // fontFaceName\n    fontFaceSrc: assembly('font-face-src', true), // fontFaceSrc\n    fontFaceUri: assembly('font-face-uri', true), // fontFaceUri\n    foreignObject: assembly('foreignObject', true),\n    g: assembly('g', true),\n    glyph: assembly('glyph', true),\n    glyphRef: assembly('glyphRef', true),\n    handler: assembly('handler', true),\n    hatch: assembly('hatch', true),\n    hatchpath: assembly('hatchpath', true),\n    hkern: assembly('hkern', true),\n    image: assembly('image', true),\n    line: assembly('line', true),\n    linearGradient: assembly('linearGradient', true),\n    listener: assembly('listener'),\n    marker: assembly('marker', true),\n    mask: assembly('mask', true),\n    mesh: assembly('mesh', true),\n    meshgradient: assembly('meshgradient', true),\n    meshpatch: assembly('meshpatch', true),\n    meshrow: assembly('meshrow', true),\n    metadata: assembly('metadata', true),\n    missingGlyph: assembly('missing-glyph', true), // missing-glyph\n    mpath: assembly('mpath', true),\n    path: assembly('path', true),\n    pattern: assembly('pattern', true),\n    polygon: assembly('polygon', true),\n    polyline: assembly('polyline', true),\n    prefetch: assembly('prefetch', true),\n    radialGradient: assembly('radialGradient', true),\n    rect: assembly('rect', true),\n    set: assembly('set', true),\n    solidColor: assembly('solidColor', true),\n    solidcolor: assembly('solidcolor', true),\n    Stop: assembly('stop', true), // First capital\n    Switch: assembly('switch', true), // First capital\n    symbol: assembly('symbol', true),\n    tbreak: assembly('tbreak', true),\n    text: assembly('text', true),\n    textArea: assembly('textArea', true),\n    textPath: assembly('textPath', true),\n    tref: assembly('tref', true),\n    tspan: assembly('tspan', true),\n    unknown: assembly('unknown', true),\n    use: assembly('use', true),\n    view: assembly('view', true),\n    vkern: assembly('vkern', true)\n})\n\nexport default tags;"],"names":["isPlaneObject","toString","call","value","isString","isPrimitive","isElement","Element","isVNode","hasOwnProperty","removeChildren","parentNode","firstChild","removeChild","vDOM","rootElement","fragment","document","createDocumentFragment","SVG_NAMESPACE","node","t","id","at","ch","isSVG","val","length","count","assembly","tagName","nodeType","inner","tagNameStr","attributes","item","childNodes","i","args","isItemObject","isItemVnode","Array","isArray","push","Node","log","el","childNode","type","slice","pid","ix","render","initalRootElement","vNode","isPartial","undefined","renderFragment","appendMultipleNodes","arguments","x","appendChild","dummyVDOM","dummy","firstElementChild","innerNodes","outerNodeList","fragmentClone","importNode","elementCache","createAndAppendNode","frag","svg","textNode","createTextNode","commentNode","createComment","notAnElement","element","createElementNS","createElement","attributeKeys","Object","keys","attributesLength","attributeKey","indexOf","dataKey","replace","dataset","cleanKey","attributeValue","addEventListener","assign","style","className","class","setAttribute","forEach","searchAndReplace","selector","newVNode","retrieveAll","exchangeChildren","queriedParent","partialElement","queriedParents","querySelectorAll","queriedParentsLength","querySelector","partialRenderInner","partialNodes","partialNodesKeys","partialNodesLength","elementCachekeys","partialNodeKey","partialRender","all","initialize","rootSelector","container","initalVNode","Error","or","vNodes","conditions","exclude","filteredVNodes","filteredIndexes","toggle","classes","filter","e","ids","tags","test","children","indexes","vNodesLength","includes","c","toUpperCase","childrenLength","indexList","Set","index","loop","data","groupVnodes","hasNumber","loopedVnodes","singleVnode"],"mappings":"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"}